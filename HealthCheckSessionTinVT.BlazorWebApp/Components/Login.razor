@page "/login"
@using System.ComponentModel.DataAnnotations
@inject SMMS.Services.TinVT.IServiceProviders ServiceProviders
@inject NavigationManager Navigation

<h3>Login</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

@if (IsLoading)
{
    <div class="alert alert-info">Đang đăng nhập...</div>
}

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label class="form-label">Username</label>
        <InputText class="form-control" @bind-Value="loginModel.UserName" />
        <ValidationMessage For="@(() => loginModel.UserName)" />
    </div>
    <div class="mb-3">
        <label class="form-label">Password</label>
        <InputText type="password" class="form-control" @bind-Value="loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>
    <button class="btn btn-primary" type="submit" disabled="@IsLoading">
        @if (IsLoading)
        {
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
        }
        Login
    </button>
</EditForm>

@code {
    private LoginModel loginModel = new();
    private string ErrorMessage = string.Empty;
    private bool IsLoading = false;

    private async Task HandleLogin()
    {
        try
        {
            IsLoading = true;
            ErrorMessage = string.Empty;
            StateHasChanged();

            var user = await ServiceProviders.UserAccountService.GetUserAccount(loginModel.UserName, loginModel.Password);

            if (user != null && !string.IsNullOrEmpty(user.UserName) && user.IsActive == true)
            {
                // Đăng nhập thành công
                // Bạn có thể lưu thông tin user vào session/localStorage ở đây
                // Ví dụ: await SaveUserSession(user);

                Navigation.NavigateTo("/", forceLoad: true);
            }
            else
            {
                ErrorMessage = "Tên đăng nhập hoặc mật khẩu không đúng, hoặc tài khoản đã bị vô hiệu hóa.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Có lỗi xảy ra: {ex.Message}";
        }
        finally
        {
            IsLoading = false;
            StateHasChanged();
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Vui lòng nhập tên đăng nhập")]
        public string UserName { get; set; } = string.Empty;

        [Required(ErrorMessage = "Vui lòng nhập mật khẩu")]
        public string Password { get; set; } = string.Empty;
    }
}